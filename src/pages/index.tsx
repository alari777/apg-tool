import Head from 'next/head';
import { FC, useState, FormEvent } from 'react';

const HomePage: FC = () => {
  const [classSpinner, setClassSpinner] = useState<boolean>(false);
  const [isApg, setIsApg] = useState<boolean>(false);
  const [apgOutput, setApgOutput] = useState<string[]>([]);

  const generateAPG = async (
    event: FormEvent<HTMLFormElement>
  ): Promise<void> => {
    event.preventDefault();
    setClassSpinner(true);
    setIsApg(false);
    try {
      const response = await fetch('/api/v1/apg', {
        method: 'GET',
      });
      if (response.status === 200) {
        const json = await response.json();
        const { data } = json;
        setIsApg(true);
        console.log(data);
        const arr = data.split('\n');
        console.log(arr, arr[2]);
        setApgOutput(arr);
      }
    } catch (err) {}
    setClassSpinner(false);
  };

  return (
    <>
      <Head>
        <title>APG tool project</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
      </Head>
      <main className='main'>
        <form onSubmit={generateAPG}>
          <div>
            <div className='form-row'>
              <div className='col-md-9'>
                <button type='submit' className='btn btn-primary mt-3'>
                  {classSpinner && (
                    <span
                      className='spinner-border spinner-border-sm'
                      role='status'
                      aria-hidden='true'
                    ></span>
                  )}
                  APG
                </button>
              </div>
              {apgOutput &&
                apgOutput.map((apgValue: string, index: number) => (
                  <div key={apgValue}>{apgValue}</div>
                ))}
            </div>
          </div>
        </form>
      </main>
    </>
  );
};

export default HomePage;
